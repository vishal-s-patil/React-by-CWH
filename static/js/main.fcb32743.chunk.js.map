{"version":3,"sources":["logo.svg","TextUtiles/TextUtils.js","Navbar/Navbar.js","About/About.js","Alert/Alert.js","App.js","index.js"],"names":["TextUtils","props","useState","text","setText","className","style","myStyle","cols","rows","value","onChange","event","target","disabled","length","onClick","newStr","toUpperCase","toLowerCase","splitted","split","join","textToSelect","document","getElementsByClassName","select","getSelection","removeAllRanges","navigator","clipboard","writeText","filter","ele","Navbar","class","mode","id","to","changeMode","height","width","border","About","Alert","alert","type","role","msg","App","color","backgroundColor","setStyle","cls","body","classList","remove","add","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fcb32743.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import react, {useState} from \"react\";\nimport './Textutilscss.css'\n\nexport default function TextUtils(props)\n{\n    let handleUpperCase = () => {\n        // console.log(\"upper\");\n        let newStr = text.toUpperCase();\n        setText(newStr);\n    }\n\n    let handleLowerCase = () => {\n        // console.log(\"Lower\");\n        let newStr = text.toLowerCase();\n        setText(newStr);\n    }\n\n    let handleExtraSpaces = () => {\n        let splitted = text.split(/[ ]+/);\n        setText(splitted.join(\" \"))\n    }\n\n    let handleCopy = () => {\n        let textToSelect = document.getElementsByClassName(\"textArea\")[0];\n        textToSelect.select();\n        document.getSelection().removeAllRanges();\n        navigator.clipboard.writeText(textToSelect.value);\n    }\n\n    let handleOnChange = (event) => {\n        // console.log(\"On Change\");\n        setText(event.target.value)\n    }    \n\n    const [text, setText] = useState(\"\")\n    return (\n        <>\n        <div className=\"container\" style={props.myStyle}>\n            <textarea cols=\"100\" rows=\"9\" value={text} onChange={handleOnChange} className=\"textArea\" style={props.myStyle}></textarea>\n\n            <div className=\"myBtns\">\n                <button disabled={text.length === 0} onClick={handleUpperCase} className=\"btnn\" style={props.myStyle}>convert to upper case</button>\n\n                <button disabled={text.length === 0} onClick={handleLowerCase} className=\"btnn\" style={props.myStyle}>convert to lower case </button>\n\n                <button disabled={text.length === 0} onClick={handleExtraSpaces} className=\"btnn\" style={props.myStyle}>Remove Extra Spaces</button>\n\n                <button disabled={text.length === 0} onClick={handleCopy} className=\"btnn\" style={props.myStyle}>copy text</button>\n            </div>\n\n\n            <p>word count : {text.split(/\\s+/).filter((ele) => {return ele.length !== 0}).length}</p>\n            <p>characters count : {text.length}</p>\n        </div>\n        </>\n    )\n    \n}","import react, {useState} from \"react\";\nimport './Navbar.css'\nimport {Link} from 'react-router-dom';\n\nfunction Navbar(props){\n\n    return (\n        <nav class={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`} id=\"myNavbar\">\n            <div class=\"container-fluid\">\n                {/* <a class=\"navbar-brand\" href=\"/home\">TextUtiles</a> */}\n                <Link class=\"navbar-brand\" to=\"/\">TextUtiles</Link>\n                <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li class=\"nav-item\">\n                        {/* <a class=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a> */}\n                        <Link class=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\n                        </li>\n                        <li class=\"nav-item\">\n                        {/* <a class=\"nav-link\" href=\"/about\">About</a> */}\n                        <Link class=\"nav-link\" to=\"/about\">About</Link>\n                        </li>\n                    </ul>\n                </div>\n\n                <div className=\"d-flex\">\n                    <div className=\"bg-primary rounded mx-1\" onClick={() => {props.changeMode('primary')}} style={{height : '22px', width : '22px',border : '1px solid #00ffe5'}}></div>\n                    <div className=\"bg-warning rounded mx-1\" onClick={() => {props.changeMode('warning')}} style={{height : '22px', width : '22px',border : '1px solid #00ffe5'}}></div>\n                    <div className=\"bg-success rounded mx-1\" onClick={() => {props.changeMode('success')}} style={{height : '22px', width : '22px',border : '1px solid #00ffe5'}}></div>\n                    <div className=\"bg-danger rounded mx-1\" onClick={() => {props.changeMode('danger')}} style={{height : '22px', width : '22px',border : '1px solid #00ffe5'}}></div>\n                    <div className=\"bg-light rounded mx-1\" onClick={() => {props.changeMode('light')}} style={{height : '22px', width : '22px',border : '1px solid #00ffe5'}}></div>\n                    <div className=\"bg-dark rounded mx-1\" onClick={() => {props.changeMode('dark')}} style={{height : '22px', width : '22px', border : '1px solid #00ffe5'}}></div>\n                </div>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar","import react from \"react\";\nimport './About.css'\n\nfunction About(props){  \n    return (\n        <div id=\"myPara\" style={props.myStyle}>\n            <p>\n                As Bootstrap 5 continues to mature, more and more styles will be built with CSS variables as a means to provide more real-time customization without the need to always recompile Sass. Our approach is to take our source Sass variables and transform them into CSS variables. That way, even if you donâ€™t use CSS variables, you still have all the power of Sass. This is still in-progress and will take time to fully implement.\n            </p>\n        </div>\n    );\n}\n\nexport default About;","import react from \"react\";\nimport './Alert.css'\n\nfunction Alert(props){\n    return (\n        <div style={{height: \"20px\"}}>\n           {props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\" id=\"myAlert\">\n                <strong>{props.alert.msg}</strong>\n            </div>}\n        </div>\n    );\n}\n\nexport default Alert;","import logo from './logo.svg';\nimport './App.css';\nimport TextUtils from './TextUtiles/TextUtils';\nimport DarkMode from './DarkMode/DarkMode';\nimport Navbar from './Navbar/Navbar'\nimport About from './About/About'\nimport Alert from './Alert/Alert'\nimport react, {useState} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (type, message)=>{\n    setAlert({\n      type : type,\n      msg : message\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 700);\n  }\n\n  const [mode, setMode] = useState('light');\n\n  const [myStyle, setStyle] = useState({\n    color : 'black',\n    backgroundColor : 'white'\n  })\n\n  const removeClassList = () => {\n    document.body.classList.remove('bg-danger');\n    document.body.classList.remove('bg-success');\n    document.body.classList.remove('bg-primary');\n    document.body.classList.remove('bg-warning');\n    document.body.classList.remove('bg-dark');\n    document.body.classList.remove('bg-light');\n  }\n\n  const changeMode = (cls)=>{\n    removeClassList();\n    document.body.classList.add('bg-'+cls);\n    if(cls === 'danger'){\n      setStyle({\n        color : 'white',\n        backgroundColor : '#dc3545'\n      })\n    }\n    else if(cls === 'primary'){\n      setStyle({\n        color : 'white',\n        backgroundColor : '#007bff'\n      })\n    }\n    else if(cls === 'warning'){\n      setStyle({\n        color : 'white',\n        backgroundColor : '#ffc107'\n      })\n    }\n    else if(cls === 'success'){\n      setStyle({\n        color : 'white',\n        backgroundColor : '#198754'\n      })\n    }\n    else if(cls === 'dark'){\n      setStyle({\n        color : 'white',\n        backgroundColor : '#212529'\n      })\n      document.body.style.color = 'white';\n    }\n    else if(cls === 'light'){\n      document.body.style.color = '#212529';\n      setStyle({\n        color : '#212529',\n        backgroundColor : '#f8f9fa'\n      })\n    }\n  }\n\n  return (\n    <>\n    <Router>\n        <Navbar mode={mode} myStyle={myStyle} changeMode={changeMode}/>\n        <Alert alert={alert}/>\n        <Switch>\n          <Route exact path=\"/\">\n            <TextUtils mode={mode} myStyle={myStyle}/>\n          </Route>\n          <Route exact path=\"/React-by-CWH\">\n            <TextUtils mode={mode} myStyle={myStyle}/>\n          </Route>\n          <Route exact path=\"/about\">\n            <About myStyle={myStyle}/>\n          </Route>\n        </Switch>\n        {/* <DarkMode/> */}\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}